import os

plugins_dirpath = os.path.join(gimp.directory, 'batcher')

pdb.plug_in_run_tests(plugins_dirpath, 'test_', 2, ('batcher', 'utils'), 2, ('batcher.tests.test_batcher_contents', 'batcher.tests.test_update_contents'), os.path.join(plugins_dirpath, 'test_output.log'))

pdb.plug_in_run_tests(plugins_dirpath, 'test_', 1, ('batcher.tests.test_update_contents',), 0, (), os.path.join(plugins_dirpath, 'test_output.log'))

pdb.plug_in_run_tests(plugins_dirpath, 'test_', 1, ('batcher.tests.test_batcher_contents',), 0, (), os.path.join(plugins_dirpath, 'test_output.log'))


import imp
import os
import sys
plugin_dirpath = os.path.join(gimp.directory, 'batcher')
sys.path.append(plugin_dirpath)
sys.path.append(os.path.join(plugin_dirpath, 'batcher'))
sys.path.append(os.path.join(plugin_dirpath, 'batcher', 'pygimplib'))
import batcher.pygimplib as pg
from batcher.pygimplib.tests.setting import test_setting_gui


_ = lambda s: s
imp.reload(test_setting_gui)
_
test_setting_gui.test_basic_settings_and_gui()


_ = lambda s: s
imp.reload(test_setting_gui)
_
test_setting_gui.test_array_settings_and_gui()


sys.path.append(os.path.join(plugin_dirpath, 'utils'))
import make_screenshots
import preprocess_document_contents
import sync_docs
orig_cwd = os.getcwd()


_ = lambda s: s; imp.reload(make_screenshots); _; make_screenshots.main()


imp.reload(sync_docs); sync_docs.main()


imp.reload(preprocess_document_contents); preprocess_document_contents.main([(os.path.join(plugin_dirpath, 'docs', 'README_raw.md'), os.path.join(plugin_dirpath, 'README.md'))])
